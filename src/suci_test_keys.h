/* suci_test_keys.h
 *
 * Copyright (C) 2022 shahrukh hussain <shahrukh@discreteworks.com>
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 * 
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */

#ifndef _SUCI_KEYS_H_
#define _SUCI_KEYS_H_

/**
 *  Keys derived from 3GPP TS 33.501 C.3 for profile a and profile b
 * /

/**************************************
 * C.4.3.1 IMSI-based SUPI Profile A  *
***************************************/

static byte pub_key_buf_a[] = {
    0x5a, 0x8d, 0x38, 0x86, 0x48, 0x20, 0x19, 0x7c,
    0x33, 0x94, 0xb9, 0x26, 0x13, 0xb2, 0x0b, 0x91,
    0x63, 0x3c, 0xbd, 0x89, 0x71, 0x19, 0x27, 0x3b,
    0xf8, 0xe4, 0xa6, 0xf4, 0xee, 0xc0, 0xa6, 0x50
};

static byte eph_pri_key_buf_a[] = {
    0xc8, 0x09, 0x49, 0xf1, 0x3e, 0xbe, 0x61, 0xaf,
    0x4e, 0xbd, 0xbd, 0x29, 0x3e, 0xa4, 0xf9, 0x42,
    0x69, 0x6b, 0x9e, 0x81, 0x5d, 0x7e, 0x8f, 0x00,
    0x96, 0xbb, 0xf6, 0xed, 0x7d, 0xe6, 0x22,0x56
};

static byte eph_pub_key_buf_a[] = {
    0xb2, 0xe9, 0x2f, 0x83, 0x60, 0x55, 0xa2, 0x55,
    0x83, 0x7d, 0xeb, 0xf8, 0x50, 0xb5, 0x28, 0x99,
    0x7c, 0xe0, 0x20, 0x1c, 0xb8, 0x2a, 0xdf, 0xe4,
    0xbe, 0x1f, 0x58, 0x7d, 0x07, 0xd8, 0x45, 0x7d
};

static byte supi_a[] = { 0x00, 0x01, 0x20, 0x80, 0xf6 };

static byte verify_cipher_a[] = { 0xcb, 0x02, 0x35, 0x24, 0x10 };

static byte scheme_output_a[] = {
    0xb2, 0xe9, 0x2f, 0x83, 0x60, 0x55, 0xa2, 0x55,
    0x83, 0x7d, 0xeb, 0xf8, 0x50, 0xb5, 0x28, 0x99,
    0x7c, 0xe0, 0x20, 0x1c, 0xb8, 0x2a, 0xdf, 0xe4,
    0xbe, 0x1f, 0x58, 0x7d, 0x07, 0xd8, 0x45, 0x7d,
    0xcb, 0x02, 0x35, 0x24, 0x10, 0xcd, 0xdd, 0x9e,
    0x73, 0x0e, 0xf3, 0xfa, 0x87
};

/**************************************
 * C.4.4.1 IMSI-based SUPI Profile B  *
***************************************/

static byte pub_key_buf_uncomp_b[] = { // uncompressed size 65
    0x04,0x72,0xDA,0x71,0x97,0x62,0x34,0xCE,
    0x83,0x3A,0x69,0x07,0x42,0x58,0x67,0xB8,
    0x2E,0x07,0x4D,0x44,0xEF,0x90,0x7D,0xFB,
    0x4B,0x3E,0x21,0xC1,0xC2,0x25,0x6E,0xBC,
    0xD1,0x5A,0x7D,0xED,0x52,0xFC,0xBB,0x09,
    0x7A,0x4E,0xD2,0x50,0xE0,0x36,0xC7,0xB9,
    0xC8,0xC7,0x00,0x4C,0x4E,0xED,0xC4,0xF0,
    0x68,0xCD,0x7B,0xF8,0xD3,0xF9,0x00,0xE3,
    0xB4
};

static byte pub_key_buf_comp_b[] = { // compressed size 33
    0x02,0x72,0xDA,0x71,0x97,0x62,0x34,0xCE,
    0x83,0x3A,0x69,0x07,0x42,0x58,0x67,0xB8,
    0x2E,0x07,0x4D,0x44,0xEF,0x90,0x7D,0xFB,
    0x4B,0x3E,0x21,0xC1,0xC2,0x25,0x6E,0xBC,
    0xD1
};

static byte eph_pub_key_buf_comp_b[] = { // compressed size 33
    0x03, 0x9A, 0xAB, 0x83, 0x76, 0x59, 0x70, 0x21,
    0xE8, 0x55, 0x67, 0x9A, 0x97, 0x78, 0xEA, 0x0B,
    0x67, 0x39, 0x6E, 0x68, 0xC6, 0x6D, 0xF3, 0x2C,
    0x0F, 0x41, 0xE9, 0xAC, 0xCA, 0x2D, 0xA9, 0xB9, 0xD1
};

static byte eph_pub_key_buf_uncomp_b[] = { // un compressed size 65
    0x04, 0x9A, 0xAB, 0x83, 0x76, 0x59, 0x70, 0x21,
    0xE8, 0x55, 0x67, 0x9A, 0x97, 0x78, 0xEA, 0x0B,
    0x67, 0x39, 0x6E, 0x68, 0xC6, 0x6D, 0xF3, 0x2C,
    0x0F, 0x41, 0xE9, 0xAC, 0xCA, 0x2D, 0xA9, 0xB9,
    0xD1, 0xD1, 0xF4, 0x4E, 0xA1, 0xC8, 0x7A, 0xA7,
    0x47, 0x8B, 0x95, 0x45, 0x37, 0xBD, 0xE7, 0x99,
    0x51, 0xE7, 0x48, 0xA4, 0x32, 0x94, 0xA4, 0xF4,
    0xCF, 0x86, 0xEA, 0xFF, 0x17, 0x89, 0xC9, 0xC8,
    0x1F
};

static byte eph_pri_key_buf_comp_b[] = { // compressed size 32
    0x99, 0x79, 0x88, 0x58, 0xA1, 0xDC, 0x6A, 0x2C,
    0x68, 0x63, 0x71, 0x49, 0xA4, 0xB1, 0xDB, 0xFD,
    0x1F, 0xDF, 0xF5, 0xAD, 0xDD, 0x62, 0xA2, 0x14,
    0x2F, 0x06, 0x69, 0x9E, 0xD7, 0x60, 0x25, 0x29
};

static byte scheme_output_b[] = {
    0x03, 0x9A, 0xAB, 0x83, 0x76, 0x59, 0x70, 0x21,
    0xE8, 0x55, 0x67, 0x9A, 0x97, 0x78, 0xEA, 0x0B,
    0x67, 0x39, 0x6E, 0x68, 0xC6, 0x6D, 0xF3, 0x2C,
    0x0F, 0x41, 0xE9, 0xAC, 0xCA, 0x2D, 0xA9, 0xB9, 0xD1,
    0x46, 0xA3, 0x3F, 0xC2, 0x71, 0x6A, 0xC7, 0xDA, 0xE9,
    0x6A, 0xA3, 0x0A, 0x4D
};

static byte supi_b[] = { 0x00, 0x01, 0x20, 0x80, 0xf6 };

static byte verify_cipher_b[] = { 0x46, 0xA3, 0x3F, 0xC2, 0x71 };

#endif //_SUCI_KEYS_H_
